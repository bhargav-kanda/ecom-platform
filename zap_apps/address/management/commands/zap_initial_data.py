from django.core.management.base import BaseCommand, CommandError
from zap_apps.address.models import State
from zap_apps.zapuser.models import ZapRole, LoggedFrom, BrandTag, LoggedDevice, WaistSize, City
from zap_apps.zap_catalogue.models import Size, Brand, Color, Occasion, Style, SubCategory, Category
import random

STATES = [u'Andaman and Nicobar Islands',
          u'Andhra Pradesh',
          u'Arunachal Pradesh',
          u'Assam',
          u'Bihar',
          u'Chandigarh',
          u'Chhattisgarh',
          u'Dadra and Nagar Haveli',
          u'Daman and Diu',
          u'Goa',
          u'Gujarat',
          u'Haryana',
          u'Himachal Pradesh',
          u'Jammu and Kashmir',
          u'Jharkhand',
          u'Karnataka',
          u'Kerala',
          u'Lakshadweep',
          u'Madhya Pradesh',
          u'Maharashtra',
          u'Manipur',
          u'Meghalaya',
          u'Mizoram',
          u'Nagaland',
          u'Odisha',
          u'Puducherry',
          u'Punjab',
          u'Rajasthan',
          u'Sikkim',
          u'Tamil Nadu',
          u'Telangana',
          u'Tripura',
          u'Uttar Pradesh',
          u'Uttarakhand',
          u'West Bengal',
          u'New Delhi']
cities = [u'Bengaluru', u'Chennai', u'Mumbai', u'Kolkota', u'New Delhi', u'Hyderabad']
colors = [
    [u'Beige', u'#EAE2CF'],
    [u'Blue', u'#2196F3'],
    [u'Cream', u'#FEF9F0'],
    [u'Green', u'#4CAF50'],
    [u'Multi Color', ''],
    [u'Orange', u'#FF9800'],
    [u'Purple', u'#9C27B0'],
    [u'Silver', u'#DCDCDC'],
    [u'Tan', u'#BFA76F'],
    [u'Yellow', u'#FFEB3B'],
    [u'Black', u'#000000'],
    [u'Brown', u'#795548'],
    [u'Gold', u'#F0D878'],
    [u'Grey', u'#9E9E9E'],
    [u'Navy', u'#002147'],
    [u'Pink', u'#E91E63'],
    [u'Red', u'#F44336'],
    [u'Stone', u'#616067'],
    [u'White', u'#FFFFFF'],
    [u'Maroon', u'#5F0609'],
]
logined_from = ['fb', 'instagram', 'zapyle']
logged_device = ['website', 'android', 'ios']
categories = [{'type': "C", 'category': u'Indian Wear',
               'sub_categories': [u'Sari',
                                  u'Pakistani Lawn',
                                  u'Indo Western',
                                  u'Dhoti Pants',
                                  u'Anarkali',
                                  u'Kaftans',
                                  u'Kurta',
                                  u'Salwar Kameez',
                                  u'Tunic',
                                  u'Lehenga']},
              {'type': "C", 'category': u'Tops',
               'sub_categories': [u'Blazers',
                                  u'Coats and Jackets',
                                  u'Jumpers & Cardigans',
                                  u'Shirts Blouses',
                                  u'T-shirts',
                                  u'Blouse',
                                  u'Capes',
                                  u'Body suits',
                                  u'Cami Tops',
                                  u'Kimonos',
                                  u'Sweaters']},
              {'type': "C", 'category': u'Bottoms',
               'sub_categories': [u'Jeans',
                                  u'Shorts',
                                  u'Skirts',
                                  u'Culottes',
                                  u'Skorts',
                                  u'Trousers',
                                  u'Leggings']},
              {'type': "C", 'category': u'Tops and Bottoms',
               'sub_categories': [u'Co-ords',
                                  u'Jumpsuits and Playsuits',
                                  u'Suits and Seperates']},
              {'type': "C", 'category': u'Swim Wear',
               'sub_categories': [u'One Piece',
                                  u'Two Piece',
                                  u'Cover Up']},
              {'type': "C", 'category': u'Dresses',
               'sub_categories': [u'Dresses', u'Gowns']},
              {'type': "FS", 'category': u'Accessories',
               'sub_categories': [u'Key Chain',
                                  u'Belts',
                                  u'Watches',
                                  u'Fine Jewellery',
                                  u'Hair Accessories',
                                  u'Phone Accessories',
                                  u'Scarves',
                                  u'Shawls',
                                  u'Sunglasses',
                                  u'Body Jewellery',
                                  u'Bracelets',
                                  u'Earrings',
                                  u'Necklaces',
                                  u'Rings']},
              {'type': "FS", 'category': u'Handbags',
               'sub_categories': [u'Clutch',
                                  u'Wallet',
                                  u'Hobo',
                                  u'Sling',
                                  u'Luggage Bag',
                                  u'Tote',
                                  u'Messenger Bag',
                                  u'Wristlet']},
              {'type': "FW", 'category': u'Foot Wear',
               'sub_categories': [u'Boots',
                                  u'Brogues',
                                  u'Sandals',
                                  u'Flat boots',
                                  u'Flat Sandals',
                                  u'Formal Shoes',
                                  u'Platforms',
                                  u'Loafers ',
                                  u'Novelty',
                                  u'Gladiators',
                                  u"Stiletto's",
                                  u'Ballerina Flats',
                                  u"Oxford's",
                                  u'Wedges',
                                  u'Jelly',
                                  u'Clags',
                                  u'Mules']}]
brand_tags = ['Boho',
              'Chic',
              'Trendy',
              'Classic',
              'New with Tags',
              'Festivities',
              'Bridal Wear',
              'Less than 5000',
              'High end',
              'fast fashion',
              'Designer wear',
              'Limited edition',
              'Formal Wear',
              'Office',
              'Summer',
              'Wedding',
              'Girls Night Out',
              'Beach Vacation',
              'Essentials',
              'Cocktail and Formal',
              'Travelling',
              'Festivities',
              'Bridal Wear',
              'Tops',
              'Dresses',
              'Blazers',
              'Co-ords',
              'Coats and Jackets',
              'Gowns',
              'Jeans',
              'Jumpers & Cardigans',
              'Jumpsuits and Playsuits',
              'Trousers',
              'Bottoms']
brands = [u'Oakley',
 u'Pepe Jeans',
 u"Raunika's Couture",
 u'BCBG Maxazria',
 u'Bvlgari',
 u'Oasis',
 u'Giorgio Armani',
 u'Fendi',
 u'Global Desi',
 u'Ermenegildo zegna',
 u'TFNC',
 u'Calvin and Klein',
 u'Freya',
 u'Anne Klien',
 u'Jatin Varma',
 u"Tod's",
 u'Isabella Sanchis',
 u'River Island',
 u'Bebe',
 u'True religion',
 u'Rohit Bal',
 u'Kipling',
 u'Promod',
 u'Kenneth Cole',
 u'Van Heusen',
 u'Gerry Weber',
 u'Hackett',
 u'Modi',
 u'Sana Safinaz',
 u'Bally Shoe',
 u'TAIKA by Poonam Bhagat',
 u'Faraz Manan',
 u'Koovs',
 u'Charles and keith',
 u'Papa Dont Preach',
 u'Prada',
 u'Yves Saint Laurent',
 u'Shivangi Sahni',
 u'Benetton',
 u'Hilfiger jeans',
 u'Missguided',
 u'Manish arora',
 u'Park Avenue',
 u'All Saints',
 u'Nishka Lulla',
 u'Zachi Store',
 u'Fiorelli',
 u'Lara Karen',
 u'Kurt Geiger',
 u'7forallmankind',
 u'Anju Modi',
 u'New look',
 u'Payal Singhal',
 u'Celine',
 u'Payal Pratap',
 u'AQAQ',
 u'Hugo boss',
 u'Oscar De le Renta',
 u'Pernia Qureshi',
 u'Only',
 u'Crisp',
 u'Done by None',
 u'Miu Miu',
 u'Turquoise and Gold',
 u'Armani Exchange',
 u'Nautica',
 u'Billabong',
 u'Chopard',
 u'Michael Kors',
 u'Ritika Bharwani',
 u'Flamingo',
 u'Warehouse',
 u'Bruno Magli',
 u'Mulberry',
 u'ILK by Shikha and Vinita',
 u'Frou Frou',
 u'Topshop',
 u'Massimo Dutti',
 u'Steve Madden',
 u'U.S Polo',
 u'Balenciaga',
 u'Berksha',
 u'Jordan',
 u'Guess',
 u'Tom Ford',
 u'Vasudha Arora',
 u'Anushka Khanna',
 u'Anushree Reddy',
 u'Sanchita',
 u'Next',
 u'Paul smith',
 u"Church's",
 u'Toms',
 u'Marks and Spencer',
 u'Coccinelle',
 u'Mango',
 u'Bottega Veneta',
 u'Black Milk Clothing',
 u'Diane von F\xfcrstenberg',
 u'Roberto Cavalli',
 u'AND',
 u'Tarun Tahiliani',
 u'Totes',
 u'Valentino',
 u'Frock and Frill',
 u'American Eagle',
 u'Arpita Mehta',
 u'Love Moschino',
 u'Archana Rao',
 u'Victoria Beckham',
 u'Hollister',
 u'JJ valaya',
 u'Ed Hardy',
 u'Marc by Marc Jacobs',
 u'Outhouse',
 u'Lacoste',
 u'Shivan and Naresh',
 u'IceBerg',
 u'Biba',
 u'Fred Perry',
 u'Mink pink',
 u'DSquared',
 u'Nina Ricci',
 u'Hue',
 u'Reebok',
 u'Britney spears',
 u'Max Mara',
 u'Laura Ashley',
 u'Adidas Originals',
 u'Jbrand',
 u'W',
 u'Designer',
 u'Shift by Nimish shah',
 u'Salvatore Ferragamo',
 u'Fab Alley',
 u'H by Hudson',
 u'United colors of Benetton',
 u'Lipsy London',
 u'Shantanu and Nikhil',
 u'Kenzo',
 u'Louis Vuitton',
 u'Juicy Couture',
 u'Aldo',
 u'Monica dogra',
 u'Sonal kalra ahuja',
 u'Stella Mccartney',
 u'Abu Jani Sandeep Khosla',
 u'H&M',
 u'ASOS',
 u'Dorothy Perkins',
 u'The North Face',
 u'Bhumika Sharma',
 u'Hermes',
 u'Ray-ban',
 u'Esprit',
 u'Moschino',
 u'Banana Republic',
 u'Huemn',
 u'Loewe',
 u'Toryburch',
 u'Abercrombie',
 u'Bally',
 u'Coach',
 u'Jack wills',
 u'Anita Dongre',
 u'Dunhill',
 u'Ted Baker',
 u'Versace',
 u'Coast',
 u'Masaba',
 u'French Connection',
 u'Nike',
 u'Chanel',
 u'Delpozo',
 u'Elie Saab',
 u'Neeta Lulla',
 u'Vivienne westwood',
 u'Ranna Gill',
 u'British India Classics',
 u'Nikhil Thampi',
 u'Balmain',
 u'Marchesa',
 u'Jones New york',
 u'Tommy&Hilfiger',
 u'Gucci',
 u'Gas',
 u'Catwalk',
 u'Forever unique',
 u'Bhaavya Bhatnagar',
 u'Wendell Rodricks',
 u'Alice+Olivia',
 u'Wills Lifestyle',
 u'Theory',
 u'Ritu Kumar',
 u'Christian Louboutin',
 u'AX Paris',
 u'Morgan',
 u'Anamika Khanna',
 u'Ashima Leena',
 u'Miss Selfridge',
 u'Escada',
 u'iBacks',
 u'DKNY',
 u"Levi's",
 u'Manish Malhotra',
 u'Gaurav Gupta',
 u'Express',
 u'Pull&bear',
 u'Shehla Khan',
 u'To Be Announced',
 u'Paul & Joe',
 u'Karan Millen',
 u'Cath Kidston',
 u'Sabyasachi',
 u'Ritika Sachdeva',
 u'Diesel',
 u'Rohit Gandhi',
 u'Madison ',
 u'D&G',
 u'Chloe',
 u'Amrapali',
 u'Zara',
 u'Desigual',
 u'Swatch',
 u'Christian Dior',
 u'Babita M',
 u'Nine west',
 u'Varun Bahl',
 u'Free people',
 u'Vans',
 u'Converse',
 u'Ridhi Mehra',
 u'Alexander Mcqueen',
 u'Sketchers',
 u'American apparel',
 u'Cherokee',
 u'Jean Paul Gailtier',
 u'Net-a-Porter',
 u'Ralph Lauren',
 u'Jimmy Choo',
 u'Sisley',
 u'Urban Outfitters',
 u'J.crew',
 u'Nitya Bajaj',
 u'Vikram Phadnis',
 u'Kanika Goyal',
 u'Givenchy',
 u'M Missoni',
 u'Sonaakshi Raaj',
 u'T.J Maxx',
 u'Ayesha',
 u'Forever New',
 u'Superdry',
 u'Jeffery Campbell ',
 u'Puma',
 u'Burberry',
 u'Vero moda',
 u'Cole Haan',
 u'Satya Paul',
 u'Zuhair murad',
 u'Forever21',
 u'Furla',
 u'What For',
 u'Lulu Guinness',
 u'Yager',
 u'Neil Barrett ',
 u'Wrangler',
 u'Dune',
 u'Saint Laurent',
 u'Mochi',
 u'Mahotsav',
 u'Avirate',
 u'Hush puppies',
 u'Rajesh Pratap Singh']
styles = [u'Boho', u'Trendy', u'Classic', u'Chic']
occassions = [u'Formal Wear',
              u'Office',
              u'Summer',
              u'Wedding',
              u'Girls Night Out',
              u'Beach Vacation',
              u'Essentials',
              u'Cocktail and Formal',
              u'Travelling',
              u'Festivities',
              u'Bridal Wear']

sizes = [['XXS', '00', '2', '30'],
         ['XS', '0', '4', '32']]
size_types = ['XS', 'S', 'S', 'M', 'M', 'L', 'L', 'XL', 'XL', 'XXL']
shoe_sizes = [5, 5, 2.5, 35.5]
waist_sizes = [u'24', u'25', u'26', u'27', u'28',
               u'29', u'30', u'31', u'32', u'33', u'34']
roles = ['zap_user', 'zap_exclusive', 'store_front', 'zap_admin', 'zap_dummy', 'designer']


class Command(BaseCommand):
    help = 'Initial data for all States'

    # def add_arguments(self, parser):
    #     parser.add_argument('poll_id', nargs='+', type=int)

    def handle(self, *args, **options):
        for i in STATES:
            State.objects.get_or_create(name=i)
        self.stdout.write('Successfully created states')
        for role in roles:
            ZapRole.objects.get_or_create(name=role)
        self.stdout.write('Successfully created role')
        for i in logined_from:
            LoggedFrom.objects.get_or_create(name=i)
        self.stdout.write('Successfully created logined_from detail')
        for i in cities:
            City.objects.get_or_create(name=i)
        self.stdout.write('Successfully created cities')
        for i in logged_device:
            LoggedDevice.objects.get_or_create(name=i)
        self.stdout.write('Successfully created logged_device detail')
        for i in brand_tags:
            BrandTag.objects.get_or_create(tag=i)
        self.stdout.write('Successfully created brand tags')
        r1 = random.sample(range(20), 15)
        # for i in r1:
        #     r2 = random.sample(range(20), random.choice([3,4,5,6]))
        #     try:
        #         r2.remove(i)
        #     except ValueError:
        #         pass
        #     b = BrandTag.objects.get(tag="Test BrandTag {}".format(i))
        #     b.related_tags.add(*BrandTag.objects.filter(tag__in=["Test BrandTag {}".format(i) for i in r2]))
        self.stdout.write('Successfully tagged brands each other')
        self.stdout.write('Creating Test brands..Please wait..')
        for i in brands:
            b, c = Brand.objects.get_or_create(brand=i)
            # if c:
            #     s = random.choice(range(20))
            #     b.tags.add(BrandTag.objects.get(tag="Test BrandTag {}".format(s)))
        self.stdout.write('Successfully created brands and add to Brand tags')
        for i in colors:
            c, cr = Color.objects.get_or_create(name=i[0])
            c.code = i[1]
            c.save()
        self.stdout.write('Successfully created colors')
        for i in occassions:
            Occasion.objects.get_or_create(name=i)
        self.stdout.write('Successfully created occassions')
        for i in styles:
            Style.objects.get_or_create(style_type=i)
        self.stdout.write('Successfully created styles')
        for cat in categories:
            b, c = Category.objects.get_or_create(
                name=cat['category'], category_type=cat['type'])
            if c:
                for s in cat['sub_categories']:
                    SubCategory.objects.get_or_create(name=s, parent=b)

        self.stdout.write('Successfully created categories and sub_categories')
        c = Category.objects.get(name="Foot Wear")
        c.category_type = "FW"
        c.save()
        c = Category.objects.get(name="Accessories")
        c.category_type = "FS"
        c.save()
        c = Category.objects.get(name="Handbags")
        c.category_type = "FS"
        c.save()
        for i in sizes:
            Size.objects.get_or_create(
                category_type='C',
                size=i[0],
                us_size=i[1],
                uk_size=i[2],
                eu_size=i[3],
            )
        us, uk, eu = 0, 4, 32
        for i in size_types:
            us, uk, eu = us + 2, uk + 2, eu + 2
            Size.objects.get_or_create(
                category_type='C',
                size=i,
                us_size=us,
                uk_size=uk,
                eu_size=eu,
            )
        Size.objects.get_or_create(
            category_type='FS',
            size="FS",
            us_size=0,
            uk_size=0,
            eu_size=0,
        )
        self.stdout.write('Successfully created Clothes sizes')

        us, uk, eu = shoe_sizes[1], shoe_sizes[2], shoe_sizes[3]
        for i in range(14):
            Size.objects.get_or_create(
                category_type='FW',
                size=str(i),
                us_size=str(us),
                uk_size=str(uk),
                eu_size=str(eu),
            )
            us, uk, eu = us + .5, uk + .5, eu + .5
        self.stdout.write('Successfully created Footwear sizes')
        for i in waist_sizes:
            WaistSize.objects.get_or_create(size=i)
        self.stdout.write('Successfully created Waist Sizes')
